name: VSTest Reusable Workflow

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type:
      test-assembly:
        required: true
        type:
      test-filter-criteria:
        required: false
        type:
      configuration:
        required: true
        type:
      platform:
        required: false
        type:
      run-settings-file:
        required: false
        type:
      code-coverage-enabled:
        required: false
        type: boolean
      test-run-title:
        required: false
        type:
      custom-test-adapters:
        required: false
        type:
      run-in-parallel:
        required: false
        type: boolean
      testPlan:
        required: false
        type:
      testSuite:
        required: false
        type:
      testConfiguration:
        required: false
        type:
      tcmTestRun:
        required: false
        type:
      runOnlyImpactedTests:
        required: false
        type: boolean
      runAllTestsAfterXBuilds:
        required: false
        type:
      uiTests:
        required: false
        type: boolean
      vstestLocationMethod:
        required: false
        type:
      vsTestVersion:
        required: false
        type:
      vstestLocation:
        required: false
        type:
      overrideTestrunParameters:
        required: false
        type:
      otherConsoleOptions:
        required: false
        type:
      diagnosticsEnabled:
        required: false
        type: boolean
      collectDumpOn:
        required: false
        type:
      rerunFailedTests:
        required: false
        type: boolean
      rerunType:
        required: false
        type:
      rerunFailedThreshold:
        required: false
        type:
      rerunFailedTestCasesMaxLimit:
        required: false
        type:
      rerunMaxAttempts:
        required: false
        type:
      distributionBatchType:
        required: false
        type:
      batchingBasedOnAgentsOption:
        required: false
        type:
      customBatchSizeValue:
        required: false
        type:
      batchingBasedOnExecutionTimeOption:
        required: false
        type:
      customRunTimePerBatchValue:
        required: false
        type:
      dontDistribute:
        required: false
        type: boolean
      publishRunAttachments:
        required: false
        type: boolean
      donotPublishTestResults:
        required: false
        type: boolean
      failOnMinTestsNotRun:
        required: false
        type: boolean
      minimumExpectedTests:
        required: false
        type:

jobs:
  run-tests:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration ${{ inputs.configuration }} --no-restore

      - name: Run tests
        run: |
          dotnet test `
            --configuration ${{ inputs.configuration }} `
            --logger "trx" `
            --results-directory TestResults `
            --collect:"XPlat Code Coverage" `
            ${{ if inputs.code-coverage-enabled }}: --collect:"Code Coverage" `
            --filter "${{ inputs.test-filter-criteria }}" `
            --settings "${{ inputs.run-settings-file }}" `
            --TestAdapterPath="${{ inputs.custom-test-adapters }}" `
            ${{ if inputs.run-in-parallel }}: --parallel `
            --testRunTitle "${{ inputs.test-run-title }}" `
            ${{ if inputs.runOnlyImpactedTests }}: --runOnlyImpactedTests `
            ${{ if inputs.uiTests }}: --uiTests `
            ${{ if inputs.vstestLocationMethod }}: --vstestLocationMethod="${{ inputs.vstestLocationMethod }}" `
            ${{ if inputs.vsTestVersion }}: --vsTestVersion="${{ inputs.vsTestVersion }}" `
            ${{ if inputs.vstestLocation }}: --vstestLocation="${{ inputs.vstestLocation }}" `
            ${{ if inputs.overrideTestrunParameters }}: --overrideTestrunParameters="${{ inputs.overrideTestrunParameters }}" `
            ${{ if inputs.otherConsoleOptions }}: --otherConsoleOptions="${{ inputs.otherConsoleOptions }}" `
            ${{ if inputs.diagnosticsEnabled }}: --diagnosticsEnabled `
            ${{ if inputs.collectDumpOn }}: --collectDumpOn="${{ inputs.collectDumpOn }}" `
            ${{ if inputs.rerunFailedTests }}: --rerunFailedTests `
            ${{ if inputs.rerunType }}: --rerunType="${{ inputs.rerunType }}" `
            ${{ if inputs.rerunFailedThreshold }}: --rerunFailedThreshold="${{ inputs.rerunFailedThreshold }}" `
            ${{ if inputs.rerunFailedTestCasesMaxLimit }}: --rerunFailedTestCasesMaxLimit="${{ inputs.rerunFailedTestCasesMaxLimit }}" `
            ${{ if inputs.rerunMaxAttempts }}: --rerunMaxAttempts="${{ inputs.rerunMaxAttempts }}" `
            ${{ if inputs.distributionBatchType }}: --distributionBatchType="${{ inputs.distributionBatchType }}" `
            ${{ if inputs.batchingBasedOnAgentsOption }}: --batchingBasedOnAgentsOption="${{ inputs.batchingBasedOnAgentsOption }}" `
            ${{ if inputs.customBatchSizeValue }}: --customBatchSizeValue="${{ inputs.customBatchSizeValue }}" `
            ${{ if inputs.batchingBasedOnExecutionTimeOption }}: --batchingBasedOnExecutionTimeOption="${{ inputs.batchingBasedOnExecutionTimeOption }}" `
            ${{ if inputs.customRunTimePerBatchValue }}: --customRunTimePerBatchValue="${{ inputs.customRunTimePerBatchValue }}" `
            ${{ if inputs.dontDistribute }}: --dontDistribute `
            ${{ if inputs.publishRunAttachments }}: --publishRunAttachments `
            ${{ if inputs.donotPublishTestResults }}: --donotPublishTestResults `
            ${{ if inputs.failOnMinTestsNotRun }}: --failOnMinTestsNotRun `
            ${{ if inputs.minimumExpectedTests }}: --minimumExpectedTests="${{ inputs.minimumExpectedTests }}"
