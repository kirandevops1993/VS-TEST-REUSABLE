name: 'VSTest reusable workflow'
on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
      code-coverage-enabled:
        required: false
        type: boolean
        default: false
      test-filter-criteria:
        required: false
        type: string
        default: ''
      run-settings-file:
        required: false
        type: string
        default: ''
      custom-test-adapters:
        required: false
        type: string
        default: ''
      run-in-parallel:
        required: false
        type: boolean
        default: false
      test-run-title:
        required: false
        type: string
        default: ''
      runOnlyImpactedTests:
        required: false
        type: boolean
        default: false
      uiTests:
        required: false
        type: boolean
        default: false
      vstestLocationMethod:
        required: false
        type: string
        default: ''
      vsTestVersion:
        required: false
        type: string
        default: ''
      vstestLocation:
        required: false
        type: string
        default: ''
      overrideTestrunParameters:
        required: false
        type: string
        default: ''
      otherConsoleOptions:
        required: false
        type: string
        default: ''
      diagnosticsEnabled:
        required: false
        type: boolean
        default: false
      collectDumpOn:
        required: false
        type: string
        default: ''
      rerunFailedTests:
        required: false
        type: boolean
        default: false
      rerunType:
        required: false
        type: string
        default: ''
      rerunFailedThreshold:
        required: false
        type: string
        default: ''
      rerunFailedTestCasesMaxLimit:
        required: false
        type: string
        default: ''
      rerunMaxAttempts:
        required: false
        type: string
        default: ''
      distributionBatchType:
        required: false
        type: string
        default: ''
      batchingBasedOnAgentsOption:
        required: false
        type: string
        default: ''
      customBatchSizeValue:
        required: false
        type: string
        default: ''
      batchingBasedOnExecutionTimeOption:
        required: false
        type: string
        default: ''
      customRunTimePerBatchValue:
        required: false
        type: string
        default: ''
      dontDistribute:
        required: false
        type: boolean
        default: false
      publishRunAttachments:
        required: false
        type: boolean
        default: false
      donotPublishTestResults:
        required: false
        type: boolean
        default: false
      failOnMinTestsNotRun:
        required: false
        type: boolean
        default: false
      minimumExpectedTests:
        required: false
        type: string
        default: ''

jobs:
  run-tests:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Run tests
        shell: pwsh
        run: |
          $args = @("--configuration", "${{ inputs.configuration }}", "--logger", "trx", "--results-directory", "TestResults")

          if (${{ inputs.code-coverage-enabled }}) { $args += '--collect:"XPlat Code Coverage"' }
          if ("${{ inputs.test-filter-criteria }}") { $args += "--filter=${{ inputs.test-filter-criteria }}" }
          if ("${{ inputs.run-settings-file }}") { $args += "--settings=${{ inputs.run-settings-file }}" }
          if ("${{ inputs.custom-test-adapters }}") { $args += "--TestAdapterPath=${{ inputs.custom-test-adapters }}" }
          if (${{ inputs.run-in-parallel }}) { $args += "--parallel" }
          if ("${{ inputs.test-run-title }}") { $args += "--testRunTitle=${{ inputs.test-run-title }}" }
          if (${{ inputs.runOnlyImpactedTests }}) { $args += "--runOnlyImpactedTests" }
          if (${{ inputs.uiTests }}) { $args += "--uiTests" }
          if ("${{ inputs.vstestLocationMethod }}") { $args += "--vstestLocationMethod=${{ inputs.vstestLocationMethod }}" }
          if ("${{ inputs.vsTestVersion }}") { $args += "--vsTestVersion=${{ inputs.vsTestVersion }}" }
          if ("${{ inputs.vstestLocation }}") { $args += "--vstestLocation=${{ inputs.vstestLocation }}" }
          if ("${{ inputs.overrideTestrunParameters }}") { $args += "--overrideTestrunParameters=${{ inputs.overrideTestrunParameters }}" }
          if ("${{ inputs.otherConsoleOptions }}") { $args += "${{ inputs.otherConsoleOptions }}" }
          if (${{ inputs.diagnosticsEnabled }}) { $args += "--diagnosticsEnabled" }
          if ("${{ inputs.collectDumpOn }}") { $args += "--collectDumpOn=${{ inputs.collectDumpOn }}" }
          if (${{ inputs.rerunFailedTests }}) { $args += "--rerunFailedTests" }
          if ("${{ inputs.rerunType }}") { $args += "--rerunType=${{ inputs.rerunType }}" }
          if ("${{ inputs.rerunFailedThreshold }}") { $args += "--rerunFailedThreshold=${{ inputs.rerunFailedThreshold }}" }
          if ("${{ inputs.rerunFailedTestCasesMaxLimit }}") { $args += "--rerunFailedTestCasesMaxLimit=${{ inputs.rerunFailedTestCasesMaxLimit }}" }
          if ("${{ inputs.rerunMaxAttempts }}") { $args += "--rerunMaxAttempts=${{ inputs.rerunMaxAttempts }}" }
          if ("${{ inputs.distributionBatchType }}") { $args += "--distributionBatchType=${{ inputs.distributionBatchType }}" }
          if ("${{ inputs.batchingBasedOnAgentsOption }}") { $args += "--batchingBasedOnAgentsOption=${{ inputs.batchingBasedOnAgentsOption }}" }
          if ("${{ inputs.customBatchSizeValue }}") { $args += "--customBatchSizeValue=${{ inputs.customBatchSizeValue }}" }
          if ("${{ inputs.batchingBasedOnExecutionTimeOption }}") { $args += "--batchingBasedOnExecutionTimeOption=${{ inputs.batchingBasedOnExecutionTimeOption }}" }
          if ("${{ inputs.customRunTimePerBatchValue }}") { $args += "--customRunTimePerBatchValue=${{ inputs.customRunTimePerBatchValue }}" }
          if (${{ inputs.dontDistribute }}) { $args += "--dontDistribute" }
          if (${{ inputs.publishRunAttachments }}) { $args += "--publishRunAttachments" }
          if (${{ inputs.donotPublishTestResults }}) { $args += "--donotPublishTestResults" }
          if (${{ inputs.failOnMinTestsNotRun }}) { $args += "--failOnMinTestsNotRun" }
          if ("${{ inputs.minimumExpectedTests }}") { $args += "--minimumExpectedTests=${{ inputs.minimumExpectedTests }}" }

          Write-Host "Running: dotnet test $($args -join ' ')"
          dotnet test @args
