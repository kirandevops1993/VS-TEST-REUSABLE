name: VSTest Reusable Workflow

on:
  workflow_call:
    inputs:
      runsOn: 
        required: true
        type: string
      dotnet-version:
        required: true
        type: string
      test-assembly:
        required: true
        type: string
      configuration:
        required: true
        type: string
      platform:
        required: false
        type: string
      code-coverage-enabled:
        required: false
        type: boolean
      test-run-title:
        required: false
        type: string
      run-in-parallel:
        required: false
        type: boolean
      testPlan:
        required: false
        type: string
      testSuite:
        required: false
        type: string
      testConfiguration:
        required: false
        type: string
      tcmTestRun:
        required: false
        type: string
      uiTests:
        required: false
        type: boolean
      vsTestVersion:
        required: false
        type: string
      vstestLocation:
        required: false
        type: string
      diagnosticsEnabled:
        required: false
        type: boolean
      collectDumpOn:
        required: false
        type: string
      rerunFailedTests:
        required: false
        type: boolean
      rerunType:
        required: false
        type: string
      rerunMaxAttempts:
        required: false
        type: string
      dontDistribute:
        required: false
        type: boolean

jobs:
  run-tests:
    runs-on: ${{ inputs.runsOn }} # Use the runs-on value passed from the main workflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration ${{ inputs.configuration }} --no-restore

      - name: Run tests with Visual Studio Test Runner
        run: |
          $vstestArgs = ""
          if (${{ inputs.code-coverage-enabled }}) { $vstestArgs += '/EnableCodeCoverage ' }
          if (${{ inputs.run-in-parallel }}) { $vstestArgs += '/Parallel ' }
          if (${{ inputs.diagnosticsEnabled }}) { $vstestArgs += '/Diag:logfile.txt ' }
          if (${{ inputs.collectDumpOn }}) { $vstestArgs += '/CollectDump:${{ inputs.collectDumpOn }} ' }
          if (${{ inputs.rerunFailedTests }}) { $vstestArgs += '/Rerun:${{ inputs.rerunType }} ' }

          & "${{ inputs.vstestLocation }}" `
            ${{ inputs.test-assembly }} `
            /Settings:TestSettings.runsettings `
            $vstestArgs
