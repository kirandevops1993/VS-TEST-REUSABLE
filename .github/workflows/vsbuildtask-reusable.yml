name: VS Build & Test Reusable Workflow

on:
  workflow_call:
    inputs:
      vsTestVersion:
        required: true
        type: string
      testAssembly:
        required: true
        type: string
      testFilterCriteria:
        required: false
        type: string
      runSettingsFile:
        required: false
        type: string
      codeCoverageEnabled:
        required: false
        type: boolean
      pathToCustomTestAdapters:
        required: false
        type: string
      overrideTestRunParameters:
        required: false
        type: string
      otherConsoleOptions:
        required: false
        type: string
      testRunTitle:
        required: false
        type: string
      platform:
        required: false
        type: string
      configuration:
        required: false
        type: string
      publishRunAttachments:
        required: false
        type: boolean
      runInParallel:
        required: false
        type: boolean
      vsTestLocationMethod:
        required: false
        type: string
      vsTestLocation:
        required: false
        type: string

jobs:
  build-and-test:
    runs-on: windows-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Restore NuGet Packages
        run: nuget restore

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Build Solution
        run: msbuild /p:Configuration=${{ inputs.configuration }}

      - name: Locate Test Assemblies
        id: find_tests
        shell: pwsh
        run: |
          $testAssemblies = Get-ChildItem -Path "$env:GITHUB_WORKSPACE" -Recurse -Filter "*Tests.dll" | ForEach-Object { $_.FullName }
          if (-not $testAssemblies) {
            Write-Host "‚ùå No test assemblies found matching pattern '*Tests.dll'"
            Write-Host "üëâ Possible Reasons: No test projects were built or incorrect filter pattern."
            Write-Host "üìå Solution: Ensure test projects are built before this step."
            exit 1
          }
          Write-Output "TEST_ASSEMBLIES=$($testAssemblies -join ';')" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "‚úÖ Found test assemblies: $($testAssemblies -join ', ')"

      - name: Run Tests with VSTest
        run: |
          $testCommand = "& `"
